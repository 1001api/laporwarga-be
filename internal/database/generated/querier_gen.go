// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CheckUserExists(ctx context.Context, arg CheckUserExistsParams) (bool, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (uuid.UUID, error)
	CreateUserRole(ctx context.Context, arg CreateUserRoleParams) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	DeleteUserRole(ctx context.Context, arg DeleteUserRoleParams) error
	GetUserByEmail(ctx context.Context, emailHash string) (GetUserByEmailRow, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (GetUserByIDRow, error)
	GetUserByIdentifier(ctx context.Context, arg GetUserByIdentifierParams) (GetUserByIdentifierRow, error)
	GetUserRoleByUserID(ctx context.Context, userID uuid.UUID) (UserRole, error)
	GetUsers(ctx context.Context, arg GetUsersParams) ([]GetUsersRow, error)
	IncrementFailedLoginCount(ctx context.Context, id uuid.UUID) error
	RestoreUser(ctx context.Context, id uuid.UUID) error
	SearchUser(ctx context.Context, arg SearchUserParams) ([]SearchUserRow, error)
	UpdateLastLogin(ctx context.Context, id uuid.UUID) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) (UserRole, error)
}

var _ Querier = (*Queries)(nil)
