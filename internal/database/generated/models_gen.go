// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type User struct {
	ID                  uuid.UUID          `db:"id" json:"id"`
	Email               []byte             `db:"email" json:"email"`
	FullName            []byte             `db:"full_name" json:"full_name"`
	Username            string             `db:"username" json:"username"`
	PhoneNumber         []byte             `db:"phone_number" json:"phone_number"`
	CredibilityScore    pgtype.Int2        `db:"credibility_score" json:"credibility_score"`
	Status              pgtype.Text        `db:"status" json:"status"`
	Role                pgtype.Text        `db:"role" json:"role"`
	AuthProvider        pgtype.Text        `db:"auth_provider" json:"auth_provider"`
	OauthID             pgtype.Text        `db:"oauth_id" json:"oauth_id"`
	PasswordHash        pgtype.Text        `db:"password_hash" json:"password_hash"`
	IsEmailVerified     pgtype.Bool        `db:"is_email_verified" json:"is_email_verified"`
	IsPhoneVerified     pgtype.Bool        `db:"is_phone_verified" json:"is_phone_verified"`
	LastLoginAt         pgtype.Timestamptz `db:"last_login_at" json:"last_login_at"`
	PasswordChangedAt   pgtype.Timestamptz `db:"password_changed_at" json:"password_changed_at"`
	FailedLoginAttempts pgtype.Int4        `db:"failed_login_attempts" json:"failed_login_attempts"`
	LockedUntil         pgtype.Timestamptz `db:"locked_until" json:"locked_until"`
	CreatedAt           time.Time          `db:"created_at" json:"created_at"`
	UpdatedAt           pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	DeletedAt           pgtype.Timestamptz `db:"deleted_at" json:"deleted_at"`
}
